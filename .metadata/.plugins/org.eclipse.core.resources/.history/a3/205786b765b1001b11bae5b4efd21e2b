package model;

public class Dungeon {

  private Room startingRoom;

  public Dungeon() {
    super();
    initRooms();
  }

  private void initRooms() {

    Room entry = new Room("une petite pièce banale avec un paillasson \"Bienvenue\"");
    //Ennemi -->
    Room salleEnCroix = new Room("une intersection avec de grandes colonnes et 4 portes");
    //Salle piégée mortelle
    Room sallePiegee = new Room("une salle qui se verouille et se transforme en incinérateur !");
    Room couloirL = new Room("une pièce qui tourne avec une chaise posée dans un coin");
    //Ennemi -->
    Room petitCouloir = new Room("un couloir avec, accroché au mur, des tableaux de... voitures?");
    //Salle piégée non-mortelle
    Room couloirLPiege = new Room("une pièce avec un seqelette posé dans un coin, seul...");
    //Coffre avec une arme
    Room salleCoffreA = new Room("une petite pièce avec un coffre, mais que contient-il?");
    //Coffre avec une potion
    Room salleCoffreP = new Room("une petite pièce avec un coffre, mais que contient-il?");
    //Ennemi --> Armure Rouillée
    Room couloir = new Room("un couloir avec des armures rouillées et vides (normalement)");
    Room sasBossWest = new Room("un petite pièce a l'aura pesante avec en face de vous, une immense porte");
    
    Room grandCouloir = new Room("un long couloir parsemer de preuve d'un passé plus glorieux");
    
    Room salleSePareille = new Room("une zone étrange qui ressemble à un village de Schtroumpfs");
    Room salleSuffit = new Room("un cul de sac");
    Room salleAMeche = new Room("un long et étroit passage sinueux qui tourne dans tous les sens");

    entry.setNorthRoom(salleEnCroix);
    
    salleEnCroix.setNorthRoom(sallePiegee);
    salleEnCroix.setWestRoom(petitCouloir);
    salleEnCroix.setEastRoom(couloirL);
    salleEnCroix.setSouthRoom(entry);
    
    petitCouloir.setEastRoom(salleEnCroix);
	petitCouloir.setNorthRoom(couloirLPiege);
    petitCouloir.setWestRoom(salleCoffreA);
    petitCouloir.setSouthRoom(salleCoffreP);
    
    couloirLPiege.setSouthRoom(petitCouloir);
    couloirLPiege.setNorthRoom(couloir);
    
    couloir.setSouthRoom(couloirLPiege);
    couloir.setEastRoom(sasBossWest);
    
    sasBossWest.setWestRoom(couloir);
    sasBossWest.setEastRoom(salleBoss);
    
    couloirL.setWestRoom(salleEnCroix);
    couloirL.setNorthRoom(grandCouloir);
    
    grandCouloir.setSouthRoom(couloirL);
    grandCouloir.setNorthRoom(salleCoffreKBoss);
    grandCouloir.setWestRoom(sasBossEast);
    
    
    salleSePareille.setSouthRoom(salleAMeche);
    salleAMeche.setSouthRoom(pieceEnT);
    

    startingRoom = entry;
  }

  public Room getStartingRoom() {
    return startingRoom;
  }

}
